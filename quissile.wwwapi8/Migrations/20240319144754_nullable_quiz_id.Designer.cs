// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using quissile.wwwapi8.Data;

#nullable disable

namespace quissile.wwwapi8.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240319144754_nullable_quiz_id")]
    partial class nullable_quiz_id
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("quissile.wwwapi8.Models.Alternative", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsAnswer")
                        .HasColumnType("boolean")
                        .HasColumnName("is_answer");

                    b.Property<int>("QuestionId")
                        .HasColumnType("integer")
                        .HasColumnName("question_id");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("text");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("alternative");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsAnswer = true,
                            QuestionId = 1,
                            Text = "Application Programming Interface"
                        },
                        new
                        {
                            Id = 2,
                            IsAnswer = false,
                            QuestionId = 1,
                            Text = "Application Project Interface"
                        });
                });

            modelBuilder.Entity("quissile.wwwapi8.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("QuizId")
                        .HasColumnType("integer")
                        .HasColumnName("quiz_id");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("text");

                    b.HasKey("Id");

                    b.HasIndex("QuizId");

                    b.ToTable("question");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            QuizId = 1,
                            Text = "Hva står API for?"
                        });
                });

            modelBuilder.Entity("quissile.wwwapi8.Models.Quiz", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.ToTable("quiz");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Progge - quiz"
                        });
                });

            modelBuilder.Entity("quissile.wwwapi8.Models.Alternative", b =>
                {
                    b.HasOne("quissile.wwwapi8.Models.Question", null)
                        .WithMany("Alternatives")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("quissile.wwwapi8.Models.Question", b =>
                {
                    b.HasOne("quissile.wwwapi8.Models.Quiz", null)
                        .WithMany("Questions")
                        .HasForeignKey("QuizId");
                });

            modelBuilder.Entity("quissile.wwwapi8.Models.Question", b =>
                {
                    b.Navigation("Alternatives");
                });

            modelBuilder.Entity("quissile.wwwapi8.Models.Quiz", b =>
                {
                    b.Navigation("Questions");
                });
#pragma warning restore 612, 618
        }
    }
}
