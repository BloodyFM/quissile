// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using quissile.wwwapi8.Data;

#nullable disable

namespace quissile.wwwapi8.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240315124437_seederdata")]
    partial class seederdata
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("quissile.wwwapi8.Models.Alternative", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("QuestionId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_question_id");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("text");

                    b.Property<bool>("answer")
                        .HasColumnType("boolean")
                        .HasColumnName("answer");

                    b.HasKey("Id");

                    b.ToTable("alternatives");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            QuestionId = 1,
                            Text = "Application Programming Interface",
                            answer = true
                        },
                        new
                        {
                            Id = 2,
                            QuestionId = 1,
                            Text = "Application Project Interface",
                            answer = false
                        });
                });

            modelBuilder.Entity("quissile.wwwapi8.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("text");

                    b.HasKey("Id");

                    b.ToTable("questions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Text = "Hva står API for?"
                        });
                });

            modelBuilder.Entity("quissile.wwwapi8.Models.QuestionAlternative", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AlternativeId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_alternative_id");

                    b.Property<int>("QuestionId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_question_id");

                    b.HasKey("Id");

                    b.ToTable("questions_alternatives");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AlternativeId = 0,
                            QuestionId = 0
                        });
                });

            modelBuilder.Entity("quissile.wwwapi8.Models.Quiz", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.ToTable("quizes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Progge - quiz"
                        });
                });

            modelBuilder.Entity("quissile.wwwapi8.Models.QuizQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("QuestionAlternativeId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_questions_alternatives_id");

                    b.Property<int>("QuizId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_quiz_id");

                    b.HasKey("Id");

                    b.ToTable("quizes_questions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            QuestionAlternativeId = 1,
                            QuizId = 1
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
